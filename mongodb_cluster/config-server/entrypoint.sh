#!/bin/bash
set -e

echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º mongod (config-—Å–µ—Ä–≤–µ—Ä) –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..."
mongod --config /etc/mongod.conf --fork --logpath /var/log/mongodb.log

echo "‚è≥ –ñ–¥—ë–º, –ø–æ–∫–∞ mongod –Ω–∞—á–Ω—ë—Ç —Å–ª—É—à–∞—Ç—å –ø–æ—Ä—Ç 27019..."
until nc -z localhost 27019; do
  echo "‚åõ –û–∂–∏–¥–∞–µ–º localhost:27019..."
  sleep 2
done

if [ "$INIT_CONFIG" == "true" ]; then
  echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–ø–ª–∏–∫–∞-—Å–µ—Ç–∞..."
  ALREADY_INITIALIZED=$(mongosh --port 27019 --quiet --eval 'try{rs.status().ok}catch(e){print(e.codeName)}')

  if [ "$ALREADY_INITIALIZED" == "NotYetInitialized" ]; then
    echo "‚è≥ –ñ–¥—ë–º, –ø–æ–∫–∞ configsvr2 –∏ configsvr3 –Ω–∞—á–Ω—É—Ç —Å–ª—É—à–∞—Ç—å –ø–æ—Ä—Ç 27019..."
    until nc -z configsvr2 27019 && nc -z configsvr3 27019; do
      echo "‚åõ configsvr2 –∏–ª–∏ configsvr3 –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤—ã..."
      sleep 2
    done

    echo "‚è≥ –ñ–¥—ë–º, –ø–æ–∫–∞ configsvr2 –∏ configsvr3 —Å—Ç–∞–Ω—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ rs.status()..."
    until mongosh --host configsvr2 --port 27019 --quiet --eval "try { rs.status() } catch(e) { false }" && \
          mongosh --host configsvr3 --port 27019 --quiet --eval "try { rs.status() } catch(e) { false }"; do
      echo "‚åõ –†–µ–ø–ª–∏–∫–∏ –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤—ã..."
      sleep 2
    done

    echo "‚öôÔ∏è  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–ø–ª–∏–∫–∞-—Å–µ—Ç configReplSet..."
    mongosh --quiet --port 27019 --eval "
rs.initiate({
  _id: 'configReplSet',
  configsvr: true,
  members: [
    { _id: 0, host: 'configsvr1:27019' },
    { _id: 1, host: 'configsvr2:27019' },
    { _id: 2, host: 'configsvr3:27019' }
  ]
});
"

    echo "‚è≥ –ñ–¥—ë–º –≤—ã–±–æ—Ä–∞ Primary..."
    until mongosh --quiet --port 27019 --eval 'rs.isMaster().ismaster' | grep -q true; do
      echo "‚åõ Primary –µ—â—ë –Ω–µ –≤—ã–±—Ä–∞–Ω, –∂–¥—ë–º..."
      sleep 3
    done
    echo "‚úÖ Primary –≤—ã–±—Ä–∞–Ω!"

    echo "üîê –°–æ–∑–¥–∞—ë–º admin-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
    mongosh --quiet --port 27019 --eval "
db.getSiblingDB('admin').createUser({
  user: '${MONGO_INITDB_ROOT_USERNAME}',
  pwd: '${MONGO_INITDB_ROOT_PASSWORD}',
  roles: [{ role: 'root', db: 'admin' }]
});
"
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!"
  else
    echo "‚ö†Ô∏è  –†–µ–ø–ª–∏–∫–∞-—Å–µ—Ç —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (—Å—Ç–∞—Ç—É—Å: $ALREADY_INITIALIZED)."
  fi
fi

echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º mongod –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π..."
mongod --dbpath /data/configdb --shutdown

echo "üîí –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ mongod —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π..."
exec mongod --config /etc/mongod.conf --auth
